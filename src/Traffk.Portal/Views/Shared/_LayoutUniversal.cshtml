@{
    Layout = "~/Views/Shared/_LayoutEmptyContent2.cshtml";
    ViewData["BodyContainerClass"] = "container-full-width no-side-padding";
    ViewData.SetIfMissing("Heading", ViewData["EntityTitle"] as string);
    var isListingPage = ViewData.IsListingPage();
    var isContentPage = !isListingPage;
    var showPageActions = ViewData.HasPageActions() && isContentPage;
    var showListingActions = ViewData.HasPageActions() && isListingPage;
}
@RenderSection("pageAlerts", false)
@if (ViewData.HasBreadcrumbItems())
{
    <ul class="breadcrumbs">
        @RenderSection("breadcrumbItems", false)
        <li>@ViewData[ViewDataKeys.Heading]</li>
    </ul>
}
else
{
    this.IgnoreSectionIfDefined("breadcrumbItems");
}
@if (ViewBag.Heading != null)
{
    <div class="row">
        <div class="col-xs-12">
            <h1>@ViewBag.Heading</h1>
            @if (@ViewBag.Subheading != null)
            {
                <p class="subheading">@ViewBag.Subheading</p>
            }
        </div>
    </div>
}
@if (ViewData.HasPageMenuItems() || showPageActions)
{
    <div class="row border-bottom">
        @if (ViewData.HasPageMenuItems())
        {
            <div class="col-sm-10" id="filter-tags-container">
                <ul id="personal-page-nav">
                    @RenderSection("pageNavItems", false)
                </ul>
            </div>
        }
        @if (showPageActions)
        {
            <div class="col-sm-2 text-right">
                <button class="btn btn-large btn-white toggle" data-toggle="actions-filter3">Actions</button>
                <ul id="actions-filter3" class="floated-filter list-right">
                    @RenderSection("pageActionItems", false)
                </ul>
            </div>
        }
    </div>
}
@if (isListingPage)
{
    var filters = ViewBag.ListingFilters as ListingFilters;
    var hasFilters = filters != null;
    <div class="panel smallest-padding">
        @if (hasFilters || showListingActions || ViewData.HasSelectableItems())
        {
            <div class="row border-bottom">
                <div class="col-sm-2">
                @if (hasFilters)
                {
                    @await Html.PartialAsync("_ListingFiltersPartial2", filters)
                }
                </div>
                <div class="col-sm-8" id="filter-tags-container">
                    @if (ViewData.HasSelectableItems())
                    {
                        <p class="primary-color">
                            <span class="item-selected-status" id="noItemsSelected"></span>
                            <span class="item-selected-status hidden" id="oneItemSelected">1 item is selected</span>
                            <span class="item-selected-status hidden" id="multipleItemsSelected"><span id="selectedItemCount"></span> items are selected</span>
                        </p>
                    }
                    @if (hasFilters)
                    {
                        <ul class="filter-tags">
                            <li><a href="#">Workers Comp (3) <span><i class="fa fa-times" aria-hidden="true"></i></span></a></li>
                            <li><a href="#">Risk Reports (3) <span><i class="fa fa-times" aria-hidden="true"></i></span></a></li>
                        </ul>
                    }
                </div>
                <div class="col-sm-2 text-right">
                    @if (showListingActions)
                    {
                        <button class="btn btn-large btn-white toggle" data-toggle="actions-filter3">Actions</button>
                        <ul id="actions-filter3" class="floated-filter list-right">
                            @RenderSection("pageActionItems", required: false)
                        </ul>
                    }
                </div>
            </div>
        }
        <div class="row">
            <div class="col-xs-12">
                <div class="table-responsive">
                    @RenderSection("listingTable", true)
                    @{ await Html.RenderPartialAsync("_PaginationPartial2"); }
                </div>
            </div>
        </div>
    </div>
    IgnoreBody();
}
else if (isContentPage)
{
    <div class="row">
        <div class="col-xs-12">
            @RenderBody()
        </div>
    </div>
    this.IgnoreSectionIfDefined("listingTable");
}
@{ 
    if (!ViewData.HasPageMenuItems()) { this.IgnoreSectionIfDefined("pageNavItems"); }
    if (!showListingActions && !showPageActions) { this.IgnoreSectionIfDefined("pageActionItems"); }
}
@RenderSection("pageDialogs", false)
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @RenderSection("scripts", false)
    @if (isListingPage)
    {
        <script>
            var hasSelectableItems = document.querySelectorAll('input[type="checkbox"].item-selector').length > 0;
            $("#all-items-selector").click(function () {
                $('input[type="checkbox"].item-selector').prop('checked', this.checked);
                UpdateSelectionMessaging();
            });
            $('input[type=checkbox].item-selector').click(function () {
                UpdateSelectionMessaging();
            });
            function UpdateSelectionMessaging()
            {
                var numberOfCheckedBoxes = document.querySelectorAll('input[type="checkbox"].item-selector:checked').length;
                $(".item-selected-status").addClass("hidden");
                if (numberOfCheckedBoxes == 0) {
                    $("#noItemsSelected").removeClass("hidden");
                }
                else if (numberOfCheckedBoxes == 1) {
                    $("#oneItemSelected").removeClass("hidden");
                }
                else {
                    $("#selectedItemCount").text(numberOfCheckedBoxes);
                    $("#multipleItemsSelected").removeClass("hidden");
                }
                //alert("numberOfCheckedBoxes: " + numberOfCheckedBoxes);
                if (numberOfCheckedBoxes > 1) {
                    $("ul.floated-filter.list-right li:not(.multiselect-action)").hide();
                } else {
                    $("ul.floated-filter.list-right li:not(.multiselect-action)").show();
                }
            }
        </script>
    }
}
