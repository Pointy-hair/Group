@model IEnumerable<Traffk.Bal.Data.Rdb.TraffkTenantModel.MedicalClaimLine>

@{
    Layout = "~/Views/Crm/_LayoutContact.cshtml";
    ViewData.SetTitleAndHeading(CrmController.ViewNames.Health.MedicalClaimLines.ToCrmHeading());
    ViewData.IsListingPage(true);
    ViewData.HasPageMenuItems(true);
    ViewData.HasCustomPageMenuItems(true);
    var pageKey = (CrmController.PageKeys)ViewData[AspHelpers.ViewDataKeys.PageKey];
}

@section breadcrumbItems {
    <li><a asp-controller="@CrmController.Name" asp-action="ContactMedicalClaimsList" asp-route-id="@ViewData[AspHelpers.ViewDataKeys.EntityId]">Medical Claims</a> <span>></span> </li>
    <li><a asp-controller="@CrmController.Name" asp-action="ContactMedicalClaimDetail" asp-route-id="@ViewData[AspHelpers.ViewDataKeys.EntityId]">Medical Claim Number @ViewData[AspHelpers.ViewDataKeys.MedicalClaimNumber]</a> <span>></span> </li>
}

@section pageNavItems {
    <li><a asp-controller="@CrmController.Name" asp-action="ContactMedicalClaimDetail" asp-route-id="@ViewData[AspHelpers.ViewDataKeys.EntityId]" class="@(pageKey == CrmController.PageKeys.Background ? "active" : "")">Main</a></li>
    <li><a asp-controller="@CrmController.Name" asp-action="ContactMedicalClaimLines" asp-route-id="@ViewData[AspHelpers.ViewDataKeys.EntityId]" class="@(pageKey == CrmController.PageKeys.MedicalClaimLines ? "active" : "")">Lines</a></li>
}

@section listingTable
    {
<table class="table table-bordered table-hover table-striped">
    <thead>
        <tr>
            <th>
                @Html.SortableHeaderFor(z => z.MedicalClaimLineNumber)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.ProcedureMc.Code, null, null, null, "Procedure Code")
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.ProcedureMc.Title, null, null, null, "Procedure Description")
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.ServiceToDd, null, null, null, "Service To")
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.AllowedAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.BilledAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.CoordinationOfBenefitsAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.CoinsuranceAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.CopayAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.CoverageChargeAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.DeductibleAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.NotCoveredAmount)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.PPOSavings, null, null, null, "PPO Savings")
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.OtherSavingsGenerated)
            </th>
            <th>
                @Html.SortableHeaderFor(z => z.PaidAmount)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    <a asp-action="@CrmController.ActionNames.Health.MedicalClaimDiagnosis" asp-route-id="@ViewContext.GetRouteValue()" asp-route-medicalClaimId="@item.MedicalClaimId" asp-route-medicalClaimLineId="@item.MedicalClaimLineId">@item.MedicalClaimLineNumber</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProcedureMc.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProcedureMc.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ServiceToDd.CalendarDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllowedAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BilledAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoordinationOfBenefitsAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoinsuranceAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CopayAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoverageChargeAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeductibleAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NotCoveredAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PPOSavings)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OtherSavingsGenerated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaidAmount)
                </td>
            </tr>
        }
    </tbody>
</table>
}

