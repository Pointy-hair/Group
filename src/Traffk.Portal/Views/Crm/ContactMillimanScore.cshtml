@model MillimanScore
@{
    Layout = "~/Views/Crm/_LayoutContact.cshtml";
    ViewData.SetTitleAndHeading(CrmController.ViewNames.Health.MillimanScore.ToCrmHeading());
}
<dl class="dl-horizontal">
    @*@Html.DescriptionListElement(model => model.dw_record_id)
    @Html.DescriptionListElement(model => model.dw_account_id)
    @Html.DescriptionListElement(model => model.dw_client_id)
    @Html.DescriptionListElement(model => model.dw_member_id)
    @Html.DescriptionListElement(model => model.mbr_id)
    @Html.DescriptionListElement(model => model.score_type)
    @Html.DescriptionListElement(model => model.score_start_date)
    @Html.DescriptionListElement(model => model.score_end_date)
    @Html.DescriptionListElement(model => model.ip_score)
    @Html.DescriptionListElement(model => model.op_score)
    @Html.DescriptionListElement(model => model.phy_score)
    @Html.DescriptionListElement(model => model.rx_score)
    @Html.DescriptionListElement(model => model.med_score)
    @Html.DescriptionListElement(model => model.total_score)
    @Html.DescriptionListElement(model => model.concurrent_total)
    @Html.DescriptionListElement(model => model.erScore)
    @Html.DescriptionListElement(model => model.otherScore)
    @Html.DescriptionListElement(model => model.concurrentInpatient)
    @Html.DescriptionListElement(model => model.concurrentMedical)
    @Html.DescriptionListElement(model => model.concurrentOutpatient)
    @Html.DescriptionListElement(model => model.concurrentPharmacy)
    @Html.DescriptionListElement(model => model.concurrentPhysician)
    @Html.DescriptionListElement(model => model.concurrentIpNormalizedToGroup)
    @Html.DescriptionListElement(model => model.concurrentOpNormalizedToGroup)
    @Html.DescriptionListElement(model => model.concurrentPhyNormalizedToGroup)*@
    @Html.DescriptionListElement(model => model.MillimanScoreId)
    @Html.DescriptionListElement(model => model.MemberId)
    @Html.DescriptionListElement(model => model.Member.MemberId)
    @Html.DescriptionListElement(model => model.ScoreType)
    @Html.DescriptionListElement(model => model.ScorePeriodStartDd)
    @Html.DescriptionListElement(model => model.ScorePeriodEndDd)
    @Html.DescriptionListElement(model => model.InpatientScore)
    @Html.DescriptionListElement(model => model.OutpatientScore)
    @Html.DescriptionListElement(model => model.PhysicianScore)
    @Html.DescriptionListElement(model => model.PharmacyScore)
    @Html.DescriptionListElement(model => model.MedicalScore)
    @Html.DescriptionListElement(model => model.TotalScore)
    @Html.DescriptionListElement(model => model.ConcurrentTotal)
    @Html.DescriptionListElement(model => model.EmergencyRoomScore)
    @Html.DescriptionListElement(model => model.OtherScore)
    @Html.DescriptionListElement(model => model.ConcurrentInpatient)
    @Html.DescriptionListElement(model => model.ConcurrentMedical)
    @Html.DescriptionListElement(model => model.ConcurrentOutpatient)
    @Html.DescriptionListElement(model => model.ConcurrentPharmacy)
    @Html.DescriptionListElement(model => model.ConcurrentPhysician)
    @Html.DescriptionListElement(model => model.ConcurrentInpatientNormalizedToGroup)
    @Html.DescriptionListElement(model => model.ConcurrentOutpatientNormalizedToGroup)
    @Html.DescriptionListElement(model => model.ConcurrentPhysicianNormalizedToGroup)
</dl>
