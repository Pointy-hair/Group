@model IEnumerable<Traffk.Portal.Models.ReportingModels.ScheduledReportViewModel>
@using NUglify.Helpers
@using Traffk.Portal.Controllers

@{
    Layout = "~/Views/Shared/_LayoutUniversal.cshtml";
    ViewData.SetTitleAndHeading("Scheduled Reports");
    ViewData.HasBreadcrumbItems(true);
    ViewData.IsListingPage(true);
    ViewData.HasPageActions(true);
}
@section breadCrumbItems {
    <li><a asp-controller="@ReportingController.Name" asp-action="Index">Reports</a> <span>></span> </li>
}
@section pageActionItems
{
    <li class="multiselect-action">
        @*<a onclick="cancelJobs()" class="confirm-on-click" confirmHeading="Are you sure?" confirmMessage="Are you sure you want to cancel these jobs?">Cancel Jobs</a>*@
    </li>
}
@section listingTable
{
    <table class="table table-bordered table-hover table-striped">
        <thead>
            <tr>
                <th><input type="checkbox" id="all-items-selector" /></th>
                <th>
                    @Html.SortableHeaderFor(model => model.Communication.CommunicationId, null, null, null, "Scheduled Report ID")
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Communication.CommunicationSettings.ReportName, null, null, null, "Report Name")
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Communication.CommunicationSettings.Recurrence.ReadableRecurrencePattern, null, null, null, "Frequency")
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.RecurringJob.NextExecution, null, null, null, "Next Execution")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr jobId="@item.Communication.CommunicationId">
                    <td><input type="checkbox" class="item-selector" contextId="@item.Communication.CommunicationId" /></td>
                    <td>
                        <a asp-action="ScheduledReportDetail" asp-route-id="@item.Communication.CommunicationId">
                            @Html.DisplayFor(modelItem => item.Communication.CommunicationId)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Communication.CommunicationSettings.ReportName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Communication.CommunicationSettings.Recurrence.ReadableRecurrencePattern)
                    </td>
                    <td>
                        @if (DateTime.Parse(item.RecurringJob.NextExecution.ToString()) != DateTime.UtcNow)
                        {
                            @Html.DisplayFor(modelItem => item.RecurringJob.NextExecution)
                        }
                    </td>
                    <td class="text-center">
                        <i class="fa fa-ellipsis-h toggle" aria-hidden="true" data-toggle="row-action-@item.Communication.CommunicationId"></i>
                        <ul id="row-action-@item.Communication.CommunicationId" class="floated-filter list-right">
                            <li><a asp-controller="@ReportingController.Name" asp-action="ScheduledReportDetail" asp-for-id=@item.Communication.CommunicationId>Reports</a></li>
                        </ul>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}