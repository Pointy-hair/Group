@model IEnumerable<ReusableValue>
@using static TraffkPortal.Controllers.TenantsController
@using Traffk.Bal.Settings;
@{
    Layout = "~/Views/Tenants/_LayoutTenant.cshtml";
    ViewData.IsListingPage(true);
    ViewData.HasSelectableItems(true);
    ViewData.HasPageActions(true);
}
@section pageActionItems {
<li>
    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
        Create
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu">
        <li><a asp-action="CreateReusableValue" asp-route-tenantId="@ViewContext.GetRouteValue("tenantId")" asp-route-type='@ReusableValueTypes.Color'>Color</a></li>
        <li><a asp-action="CreateReusableValue" asp-route-tenantId="@ViewContext.GetRouteValue("tenantId")" asp-route-type='@ReusableValueTypes.EmailAddress'>Email Address</a></li>
        <li><a asp-action="CreateReusableValue" asp-route-tenantId="@ViewContext.GetRouteValue("tenantId")" asp-route-type='@ReusableValueTypes.Url'>Url</a></li>
        <li><a asp-action="CreateReusableValue" asp-route-tenantId="@ViewContext.GetRouteValue("tenantId")" asp-route-type='@ReusableValueTypes.Text'>Text</a></li>
        <li><a asp-action="CreateReusableValue" asp-route-tenantId="@ViewContext.GetRouteValue("tenantId")" asp-route-type='@ReusableValueTypes.Html'>Html</a></li>
    </ul>
</li>
}
@section listingTable
{
    <table class="table">
        <thead>
            <tr>
                <th><input type="checkbox" id="all-items-selector" /></th>
                <th>
                    @Html.SortableHeaderFor(model => model.ResourceType)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Key)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Value)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr contextId="@item.Key">
                    <td><input type="checkbox" class="item-selector" contextId="@item.Key" /></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ResourceType)
                    </td>
                    <td>
                        <a asp-action="@ActionNames.ReusableValueEdit" asp-route-tenantId="@ViewContext.GetRouteValue("tenantId")" asp-route-key="@item.Key">
                            @Html.DisplayFor(modelItem => item.Key)
                        </a>
                    </td>
                    <td>
                        @switch (item.ResourceType)
                        { 
                            case ReusableValueTypes.Html:
                                @(new Microsoft.AspNetCore.Html.HtmlString(item.Value))
                                break;
                            case ReusableValueTypes.Color:
                                <text>
                                    <div style="border: 1px solid black; background-color: @item.Value; width:20px; height:20px; display: inline-block"></div>
                                    @item.Value;
                                </text>
                                break;
                            default:
                                @Html.DisplayFor(modelItem => item.Value)
                                break;
                        }
                    </td>
                    <td>
                        <i class="fa fa-ellipsis-h toggle" aria-hidden="true" data-toggle="row-action-@item.Key"></i>
                        <ul id="row-action-@item.Key" class="floated-filter list-right">
                            <li>
                                <a onclick="deleteResource('@item.Key')" class="confirm-on-click" confirmMessage="Are you sure you want to delete resource: @item.Key?">Delete</a>
                            </li>
                        </ul>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}