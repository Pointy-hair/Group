@using static TraffkPortal.Controllers.MessagingController
@{
    Layout = "~/Views/Shared/_LayoutHeroEntity.cshtml";
    var pageKey = (BlastPageKeys)ViewData[ViewDataKeys.PageKey];
    var entityId = (int) ViewData[ViewDataKeys.EntityId];
    var isNewEntity = entityId < 1;
    if (isNewEntity)
    {
        ViewData.SetTitleAndHeading("Create Blast");
    }
    var jobStatus = ViewData["JobStatus"] as string ?? Job.StatusNames.NonYetQueued;
    var parentEntityId = (int?)ViewData[ViewDataKeys.ParentEntityId];
}
@section navItems {
    <li><a asp-action="Blast" asp-route-id="@entityId" class="@(pageKey==BlastPageKeys.Background?"current-section":"")">Main</a></li>
    @if (!isNewEntity)
    {
        <li><a asp-action="BlastMessage" asp-route-id="@entityId" class="@(pageKey==BlastPageKeys.Message?"current-section":"")">Message</a></li>
        @if (parentEntityId == null)
        {
            <li><a asp-action="@ActionNames.BlastMessageQuery" asp-route-id="@entityId" class="@(pageKey == BlastPageKeys.Query ? "current-section" : "")">Query</a></li>
            <li><a asp-action="@ActionNames.BlastMessageSchedule" asp-route-id="@entityId" class="@(pageKey == BlastPageKeys.Schedule ? "current-section" : "")">Schedule</a></li>
            <li><a asp-action="@ActionNames.BlastMessageInstances" asp-route-id="@entityId" class="@(pageKey == BlastPageKeys.Instances ? "current-section" : "")">Instances</a></li>
        }
        else
        {
            <li><a asp-action="@ActionNames.BlastMessageJob" asp-route-id="@entityId" class="@(pageKey == BlastPageKeys.Job ? "current-section" : "")">Job</a></li>
        }
    }
    @RenderSection("navItems", required: false)
}
@section pageAlerts {
    @if (ViewBag.ShowAlertBlastSaved == true)
    {
        <div class="alert alert-success" role="alert">The blast has been saved.</div>
    }
    @if (ViewBag.ShowAlertBlastMessageSaved == true)
    {
        <div class="alert alert-success" role="alert">The message has been saved.</div>
    }
    @RenderSection("pageAlerts", required: false)
}
@section pageActionButtons {
    @if (!isNewEntity)
    {
        switch (jobStatus)
        {
            case Job.StatusNames.NonYetQueued:
            <button type="button" class="btn caseefault" asp-action="Create">Send Now</button>;
                break;
            case Job.StatusNames.Queued:
            case Job.StatusNames.Dequeued:
            case Job.StatusNames.Running:
            <button type="button" class="btn caseefault" asp-action="Create">Cancel In Progress Send</button>;
                break;
        }
    }
    @RenderSection("pageActionButtons", required: false)
}
@section pageDialogs {
    @RenderSection("pageDialogs", required: false)
}
@section Scripts {
    @RenderSection("scripts", required: false)
}

@RenderBody()

